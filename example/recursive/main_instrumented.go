//go:build !aspect
// Automatically generated by AspectGo (github.com/AkihiroSuda/aspectgo)
// DO NOT EDIT MANUALLY

package main

import aspectrt "github.com/AkihiroSuda/aspectgo/aspect/rt"

import (
	"fmt"

	"github.com/AkihiroSuda/aspectgo/example/recursive/pkg1"
)

func sayHello(s string) {
	(_ag_pgen_ag_proxy_0())("hello " + s)
}

func main() {
	sayHello("world")
	pkg1.SayHello1()
}

func _ag_proxy_0(a []any) (n int, err error) {
	_ag_res := (&ExampleAspect{}).Advice(&aspectrt.ContextImpl{XArgs: []interface {
	}{a}, XFunc: func(_ag_args []interface {
	}) []interface {
	} {
		_ag_arg0 := _ag_args[0].([]any)
		_ag_res0, _ag_res1 := fmt.Println(_ag_arg0...)
		_ag_res := []interface {
		}{_ag_res0, _ag_res1}
		return _ag_res
	}, XReceiver: nil})
	_ = _ag_res
	_ag_res0, _ := _ag_res[0].(int)
	_ag_res1, _ := _ag_res[1].(error)
	return _ag_res0, _ag_res1
}

func _ag_pgen_ag_proxy_0() func(...any) (int, error) {
	return func(a ...any) (n int, err error) {
		return _ag_proxy_0(a)
	}
}
